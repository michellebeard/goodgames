"""
Django settings for goodgames project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Dev secret key as example, but better to store it as an environment variable.
SECRET_KEY = os.getenv('SECRET_KEY', 'DUMBSECRETYKEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_WHITELIST = ('http://localhost:4200',
                         'https://goodgames-production.firebaseapp.com')
APPEND_SLASH = False

# Application definition

DEFAULT_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
]

OUR_APPS = [
    'accounts',
    'base',
    'games',
    'friends',
    'web',
]

THIRD_PARTY_APPS = [
    'corsheaders',
    'import_export',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # include providers you want to enable
    # 'allauth.socialaccount.providers.google',
    # 'allauth.socialaccount.providers.facebook',
    'django_extensions',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_swagger',
    'rest_auth',
    'rest_auth.registration',
    # 'rest_framework_expiring_authtoken',
]

INSTALLED_APPS = DEFAULT_APPS + OUR_APPS + THIRD_PARTY_APPS

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'goodgames.urls'

LOGIN_REDIRECT_URL = '/'

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "mandatory"

# SOCIALACCOUNT_PROVIDERS = {
#     'google'  : {
#         'SCOPE'      : [
#             'email'
#         ],
#         'AUTH_PARAMS': {'access_type': 'online'}
#     },
#     'facebook':
#         {
#             'METHOD'        : 'oauth2',
#             'SCOPE'         : ['email', 'public_profile', 'user_friends'],
#             'AUTH_PARAMS'   : {'auth_type': 'reauthenticate'},
#             'FIELDS'        : [
#                 'id',
#                 'email',
#                 'name',
#                 'first_name',
#                 'last_name',
#                 'verified',
#                 'locale',
#                 'timezone',
#                 'link',
#                 'gender',
#                 'updated_time'],
#             'EXCHANGE_TOKEN': True,
#             'LOCALE_FUNC'   : lambda request: 'kr_KR',
#             'VERIFIED_EMAIL': False,
#             'VERSION'       : 'v2.4'}
# }
#
# # facebook
# SOCIAL_AUTH_FACEBOOK_KEY =   # App ID
# SOCIAL_AUTH_FACEBOOK_SECRET = # app key
#
# # SECRETS
# SOCIAL_AUTH_SECRETS = {
#     'google': {
#         'client_id'    : '',
#         'client_secret': '',
#     }
# }

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'goodgames.wsgi.application'

# CORS Settings
CORS_ORIGIN_ALLOW_ALL = DEBUG

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

# GAE Environment
if os.getenv('GAE_INSTANCE'):
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.getenv('DB_NAME'),
            'USER': os.getenv('DB_USERNAME'),
            'PASSWORD': os.getenv('DB_PASSWORD'),
            'HOST': os.getenv('DB_HOST')
        }
    }
else:
    # Running locally so connect to either a local PostGreSQL instance or connect to
    # Cloud SQL via the proxy. To start the proxy via command line:
    #
    #     $ cloud_sql_proxy -instances=[INSTANCE_CONNECTION_NAME]=tcp:5432
    #
    # See https://cloud.google.com/sql/docs/mysql-connect-proxy
    # CANONICAL configuration. Never set this in production!!!
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql_psycopg2',
            'NAME': os.environ.get("POSTGRES_NAME", 'postgres'),  # noqa: ignore=F405
            'USER': os.environ.get("POSTGRES_USER", 'postgres'),  # noqa: ignore=F405
            'PASSWORD': os.environ.get("POSTGRES_PASSWORD", 'secret'),  # noqa: ignore=F405
            'HOST': os.environ.get("POSTGRES_HOST", 'localhost'),  # noqa: ignore=F405
            'PORT': os.environ.get("POSTGRES_PORT", 5432),  # noqa: ignore=F405
        }
    }
# [END db_setup]

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
)


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
if os.getenv('GAE_INSTANCE'):
    STATIC_URL = os.getenv("STATIC_URL", 'static/')
else:
    STATIC_URL = '/static/'

STATIC_ROOT = 'static/'

SITE_ID = 1