# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-27 20:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('description', models.CharField(max_length=500)),
                ('is_critic', models.BooleanField(default=False)),
                ('is_user', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=120)),
                ('platform', models.CharField(choices=[('2600', 'Atari 2600'), ('GEN', 'Sega Genesis'), ('PS', 'Playstation'), ('PS2', 'Playstation 2'), ('PS3', 'Playstation 3'), ('PS4', 'Playstation 4'), ('PSV', 'Playstation Vita'), ('PSP', 'Playstation Portable'), ('XB', 'Xbox'), ('X360', 'Xbox 360'), ('XOne', 'Xbox One'), ('NES', 'Nintendo Entertainment System'), ('SNES', 'Super Nintendo Entertainment System'), ('GC', 'Game Boy Color'), ('GB', 'Game Boy'), ('GBA', 'Game Boy Advance'), ('N64', 'Nintendo 64'), ('DS', 'Nintendo DS'), ('3DS', 'Nintendo DS3'), ('Wii', 'Wii'), ('WiiU', 'WiiU'), ('NS', 'Nintendo Switch'), ('PC', 'PC'), ('Unknown', 'Unknown')], default='Unknown', max_length=30)),
                ('genre', models.CharField(choices=[('Action', 'Action'), ('Adventure', 'Adventure'), ('Fighting', 'Fighting'), ('Platform', 'Platform'), ('Puzzle', 'Puzzle'), ('Racing', 'Racing'), ('Role-playing', 'Role-playing'), ('Shooter', 'Shooter'), ('Simulation', 'Simulation'), ('Sports', 'Sports'), ('Strategy', 'Strategy'), ('Misc', 'Misc'), ('Unknown', 'Unknown')], default='Unknown', max_length=30)),
                ('rating', models.CharField(choices=[('RP', 'Rating Pending'), ('EC', 'Early Childhood'), ('E', 'Everyone'), ('E10+', 'Everyone 10+'), ('T', 'Teen'), ('M', 'Mature'), ('AO', 'Adults Only'), ('K-A', 'Kids to Adults'), ('Unknown', 'Unknown')], default='Unknown', max_length=30)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('release_year', models.DateField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=120)),
                ('developer', models.CharField(blank=True, max_length=120)),
                ('na_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('eu_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('jp_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('ot_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('gb_sales', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('critic_score', models.IntegerField(blank=True, null=True)),
                ('critic_count', models.IntegerField(blank=True, null=True)),
                ('user_score', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('user_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'games',
            },
        ),
        migrations.CreateModel(
            name='GameList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('type', models.CharField(choices=[('WANT TO PLAY', 'Want to Play'), ('HAVE PLAYED', 'Have Played'), ('NEVER', 'Never want to play'), ('OTHER', 'Other')], max_length=30)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.Game')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'game_list',
            },
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['title', 'platform'], name='games_title_cc9fd9_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['title', 'platform', 'rating'], name='games_title_0e6888_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['platform', 'genre'], name='games_platfor_c814a3_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['platform'], name='games_platfor_9a5cef_idx'),
        ),
        migrations.AddIndex(
            model_name='game',
            index=models.Index(fields=['genre'], name='games_genre_ac3a20_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='game',
            unique_together=set([('title', 'platform', 'developer')]),
        ),
        migrations.AddField(
            model_name='comment',
            name='game',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='games.Game'),
        ),
        migrations.AddIndex(
            model_name='gamelist',
            index=models.Index(fields=['name', 'type'], name='game_list_name_5b3d0f_idx'),
        ),
        migrations.AddIndex(
            model_name='gamelist',
            index=models.Index(fields=['name', 'type', 'game'], name='game_list_name_dd9115_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gamelist',
            unique_together=set([('name', 'user', 'game')]),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['game', 'is_critic'], name='comments_game_id_a81b9d_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['game', 'is_user'], name='comments_game_id_ca5743_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together=set([('game', 'description')]),
        ),
    ]
